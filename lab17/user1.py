from hash_func import * 

HOST = 'localhost'
PORT = 65433

def main():
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –î–∏—Ñ—Ñ–∏-–•–µ–ª–ª–º–∞–Ω–∞
    p, g = generate_params(512)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\np = {p}\ng = {g}")

    x = random.randint(2, p - 2)
    alpha = fast_exp_mod(g, x, p)
    print(f"–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á x: {x}")
    print(f"–û—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á Œ±: {alpha}")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST, PORT))

        # –û—Ç–ø—Ä–∞–≤–∫–∞ p –∏ g
        s.sendall(json.dumps({"p": p, "g": g}).encode('utf-8'))

        # –ü–æ–ª—É—á–µ–Ω–∏–µ Œ≤ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        data = s.recv(2048)
        server_data = json.loads(data.decode("utf-8"))
        beta = server_data.get("beta")
        print(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á Œ≤: {beta}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ Œ± —Å–µ—Ä–≤–µ—Ä—É
        s.sendall(json.dumps({"alpha": alpha}).encode("utf-8"))

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        data = s.recv(1024)
        server_response = json.loads(data.decode("utf-8"))
        print("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", server_response)

        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–ª—é—á–∞
        k = fast_exp_mod(beta, x, p)
        print(f"üóùÔ∏è –û–±—â–∏–π –∫–ª—é—á —Å–µ—Å—Å–∏–∏ k: {k}")

        # –ó–∞–ø–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ (–ê–±–æ–Ω–µ–Ω—Ç A) –≤ —Ñ–∞–π–ª
        abonent_A = {
            "p": p,
            "g": g,
            "secret_key_x": x,
            "public_key_alpha": alpha,
            "received_beta": beta,
            "session_key_k": k
        }
        with open("abonent_A.json", "w", encoding="utf-8") as f:
            json.dump(abonent_A, f, indent=4)
        print("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ abonent_A.json")

if __name__ == "__main__":
    main()
