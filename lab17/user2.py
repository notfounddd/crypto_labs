from hash_func import * 


HOST = 'localhost'
PORT = 65434

def main():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind((HOST, PORT))
        s.listen()
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {HOST}:{PORT}")
        conn, addr = s.accept()
        
        with conn:
            print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–ª–∏–µ–Ω—Ç: {addr}")
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã p –∏ g
                data = conn.recv(2048)
                client_data = json.loads(data.decode("utf-8"))
                p = client_data.get("p")
                g = client_data.get("g")
                print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ:\np = {p}\ng = {g}")

                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ
                y = random.randint(2, p - 2)
                beta = fast_exp_mod(g, y, p)
                print(f"–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á y: {y}")
                print(f"–û—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á Œ≤: {beta}")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á –∫–ª–∏–µ–Ω—Ç—É
                conn.sendall(json.dumps({"beta": beta}).encode('utf-8'))

                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á –∫–ª–∏–µ–Ω—Ç–∞ (alpha)
                data = conn.recv(2048)
                client_data = json.loads(data.decode("utf-8"))
                alpha = client_data.get("alpha")
                print(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–ª—é—á Œ±: {alpha}")

                # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–π –∫–ª—é—á
                k = fast_exp_mod(alpha, y, p)
                print(f"–û–±—â–∏–π –∫–ª—é—á —Å–µ—Å—Å–∏–∏ k: {k}")

                # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                conn.sendall(json.dumps({"status": "ok"}).encode('utf-8'))

                # –ó–∞–ø–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ (–ê–±–æ–Ω–µ–Ω—Ç B) –≤ —Ñ–∞–π–ª
                abonent_B = {
                    "p": p,
                    "g": g,
                    "secret_key_y": y,
                    "public_key_beta": beta,
                    "received_alpha": alpha,
                    "session_key_k": k
                }
                with open("abonent_B.json", "w", encoding="utf-8") as f:
                    json.dump(abonent_B, f, indent=4)
                print("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ abonent_B.json")

            except Exception as e:
                conn.sendall(json.dumps({
                    "status": "error",
                    "message": f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
                }).encode("utf-8"))
                print("‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:", e)

if __name__ == "__main__":
    main()
